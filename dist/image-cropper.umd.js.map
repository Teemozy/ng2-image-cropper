{"version":3,"file":"image-cropper.umd.js","sources":["../lib/image-cropper.component.ts","../lib/image-cropper.module.ts"],"sourcesContent":["import { Component, ElementRef, Input, ViewChild, OnInit, SimpleChanges } from '@angular/core';\n\n@Component({\n  selector: 'image-cropper',\n  templateUrl: './image-cropper.component.html',\n  styleUrls: ['./image-cropper.component.css']\n})\n\n\nexport class ImageCropperComponent implements OnInit {\n\n  @Input('inputImage') public inputImage:any;\n  @ViewChild('imageCanvas') public canvas;\n  context: CanvasRenderingContext2D;\n\n  crop:Crop;\n  isMovingCropper:boolean;\n  isResizingCropper:boolean;\n  resizeCropperHandle:CropControlHandle;\n  cursorStyleName:any;\n\n  image:any;\n  croppedImage:any;\n\n  constructor() { this.crop = new Crop(); }\n\n  ngAfterViewInit() {\n    this.canvas = this.canvas.nativeElement;\n    this.context = this.canvas.getContext(\"2d\");\n    \n    // let rect = this.canvas.parentNode.nativeElement;\n    // this.canvas.width = rect.width;\n    // this.canvas.height = rect.height;\n\n    this.crop.imageW = this.canvas.width;\n    this.crop.imageH = this.canvas.height;\n    this.tick();\n  }\n  \n  //Listen for Image Changes\n  ngOnChanges(changes:SimpleChanges){\n    if(changes.inputImage){\n      var image = new Image;\n      image.src = changes.inputImage.currentValue;\n      image.onload = () => {\n        this.setImage(image);\n      }\n    }\n  }\n  \n\n  //Render \n  tick(){\n    requestAnimationFrame(()=> {\n      this.tick()\n      if(this.image){\n        var crop = this.crop;\n        var ctx = this.context;\n        ctx.clearRect(0,0,ctx.canvas.width, ctx.canvas.height);\n        ctx.drawImage(this.image, 0, 0, this.crop.imageW, this.crop.imageH); \n        this.crop.draw(ctx);\n      }\n    });\n  }\n\n  public setImage(image:HTMLImageElement) {\n    this.image = image;\n    if(image.width >  image.height){\n      this.crop.imageW = this.canvas.width;\n      this.crop.imageH = (image.height * this.canvas.width) / image.width;  \n      \n    } else {\n      this.crop.imageW = (image.width * this.canvas.height) / image.height;\n      this.crop.imageH = this.canvas.height;\n    }\n\n  }\n\n  //When mouse clicked start resizing or moving\n  private onMouseButton(event: MouseEvent) {\n    let x = event.layerX;\n    let y = event.layerY;\n\n    if(event.buttons === 1){\n      this.crop.overlapControls(x, y, (controlHandle) => {\n        if(controlHandle){\n          controlHandle.startResize();\n          this.isResizingCropper = true;\n          this.isMovingCropper = true;\n          this.resizeCropperHandle = controlHandle;\n          return; \n        }\n      })\n\n      if(this.crop.overlap(x, y)){\n        this.crop.startMove(x, y);\n        this.isMovingCropper = true;\n      }\n    } else {\n      this.crop.stopMove();\n      this.crop.stopResize();\n      this.isMovingCropper = false;\n      this.isResizingCropper = false;\n    }\n  }\n\n  private onMouseMove(event: MouseEvent){\n    let x = event.layerX;\n    let y = event.layerY;\n\n    this.changeCursor(x,y);\n\n    if(this.isResizingCropper){\n      if(this.crop.isFixedResize){\n        this.resizeCropperHandle.performFixedResize(x,y);\n        this.crop.performResize();\n      } else {\n        this.resizeCropperHandle.performResize(x,y);\n        this.crop.performResize();\n      }\n    } else if(this.isMovingCropper){\n      this.crop.performMove(x, y);\n    }\n  }\n\n  //takes care of changing the cursor\n  private changeCursor(x,y){\n    if(this.isMovingCropper || this.isResizingCropper){\n      return\n    }\n    if(this.crop.overlap(x,y)){\n      this.cursorStyleName = \"move\"\n    } else {\n      this.cursorStyleName = \"default\"\n      this.crop.overlapControls(x, y, (controlHandle) => {\n        if(controlHandle){\n          switch (controlHandle.controlIndex){\n            case cropControlsIndicies.TL:\n              this.cursorStyleName = \"nw-resize\";\n              break;\n            case cropControlsIndicies.TR:\n              this.cursorStyleName = \"ne-resize\";\n              break;\n            case cropControlsIndicies.BL:\n              this.cursorStyleName = \"sw-resize\";\n              break;\n            case cropControlsIndicies.BR:\n              this.cursorStyleName = \"se-resize\";\n              break;\n          }\n        }\n      })\n    }\n  }\n\n  private getCursorStyle(){\n    return this.cursorStyleName;\n  }\n  \n\n  public getCropBlob(callback){\n\n    //Store original canvas size\n    let originalCanvasW = this.canvas.width;\n    let originalCanvasH = this.canvas.height;\n\n    //Resize cropper for max resolution\n    // this.canvas.width = this.image.width;\n    // this.canvas.height = this.image.height;\n\n    let ctx = this.context;\n\n    ctx.clearRect(0,0,ctx.canvas.width, ctx.canvas.height);\n    ctx.drawImage(this.image, 0, 0, this.crop.imageW, this.crop.imageH); \n    let imageData = ctx.getImageData(this.crop.posX, this.crop.posY, this.crop.width, this.crop.height);\n\n    //Just repurpose the canvas \n    this.canvas.width = this.crop.width;\n    this.canvas.height = this.crop.height;\n\n    ctx.putImageData(imageData,0,0);\n\n    this.canvas.toBlob((blob) =>{\n      callback(blob);\n      this.canvas.width = originalCanvasW;\n      this.canvas.height = originalCanvasH;\n    });\n    \n  }\n\n  //@TODO test this out\n  public getImageDataURL(params,callback){\n    //Store original canvas size\n    let originalCanvasW = this.canvas.width;\n    let originalCanvasH = this.canvas.height;\n\n    //Resize cropper for max resolution\n    // this.canvas.width = this.image.width;\n    // this.canvas.height = this.image.height;\n\n    let ctx = this.context;\n\n    ctx.clearRect(0,0,ctx.canvas.width, ctx.canvas.height);\n    ctx.drawImage(this.image, 0, 0, this.crop.imageW, this.crop.imageH); \n    let imageData = ctx.getImageData(this.crop.posX, this.crop.posY, this.crop.width, this.crop.height);\n\n    //Just repurpose the canvas \n    this.canvas.width = this.crop.width;\n    this.canvas.height = this.crop.height;\n\n    ctx.putImageData(imageData,0,0);\n\n    callback(this.canvas.toDataUrl(params));\n  }\n\n  ngOnInit() {\n\n  }\n\n}\n\nclass Square{\n  posX:any;\n  posY:any;\n  width:any;\n  height:any;\n\n  // Checks if a point is within the square\n  overlap(x, y): boolean{\n    if( (x > this.posX && y > this.posY) && (x < (this.posX + this.width) && y < (this.posY + this.height))){\n      return true\n    }\n    else {\n      return false;\n    }\n  }\n  \n  distance(x1, y1, x2,y2){\n    return Math.sqrt((x2 - x1)^2 + (y2 - y1)^2);\n  }\n}\n\nenum cropControlsIndicies {TL, TR, BL, BR}\n\n//Holds information for Control handles\nclass CropControlHandle extends Square {\n  size:any;\n  halfSize: any;\n  controlIndex: any;\n  owningClass: Crop;\n\n  //Old stats for Crop\n  oldX:any;\n  oldY:any;\n  oldW:any;\n  oldH:any;\n\n\n  constructor( index, owningClass:Crop) {\n    super();\n    this.controlIndex = index;\n    this.owningClass = owningClass;\n    this.size = 10;\n    this.width = this.height = this.size;\n    this.halfSize = this.size/2;\n\n    this.performMove(); // Same as initializing the positions\n  }\n\n  //Position our control handle at the corner depending on the index before drawing\n  performMove(){\n    switch(this.controlIndex) {\n      //Top left\n      case cropControlsIndicies.TL: {\n        this.posX = this.owningClass.posX;\n        this.posY = this.owningClass.posY\n        break;\n      }\n      //Top Right\n      case cropControlsIndicies.TR:{\n        this.posX = this.owningClass.posX + this.owningClass.width;\n        this.posY = this.owningClass.posY;\n        break;\n      }\n      //Bottom left\n      case cropControlsIndicies.BL:{\n        this.posX = this.owningClass.posX;\n        this.posY = this.owningClass.posY + this.owningClass.height;\n        break;\n      }\n      // Bottom right\n      case cropControlsIndicies.BR:{\n        this.posX = this.owningClass.posX + this.owningClass.width;\n        this.posY = this.owningClass.posY + this.owningClass.height;\n        break;\n      }\n    }\n    this.posX -= this.halfSize;\n    this.posY -= this.halfSize;\n  }\n\n  startResize(){\n    this.oldX = this.owningClass.posX;\n    this.oldY = this.owningClass.posY;\n    this.oldW = this.owningClass.width;\n    this.oldH = this.owningClass.height;    \n  }\n\n  performResize(x,y){\n    switch(this.controlIndex) {\n      //Top left\n      case cropControlsIndicies.TL: {\n        this.owningClass.newX = x;\n        this.owningClass.newY = y;\n        this.owningClass.newW = this.oldW + (this.oldX - x);\n        this.owningClass.newH = this.oldH + (this.oldY - y);\n        break;\n      }\n      //Top Right\n      case cropControlsIndicies.TR: {\n        this.owningClass.newY = y;\n        this.owningClass.newW = (x - this.oldX);\n        this.owningClass.newH = this.oldH + (this.oldY - y);\n        break;\n      }\n      //Bottom left\n      case cropControlsIndicies.BL: {\n        this.owningClass.newX = x;\n        this.owningClass.newW = this.oldW + (this.oldX - x);\n        this.owningClass.newH = (y - this.oldY);\n        break;\n      }\n      // Bottom right\n      case cropControlsIndicies.BR: {\n        this.owningClass.newW = (x - this.oldX);\n        this.owningClass.newH = (y - this.oldY);\n        break;\n      }\n    }\n    this.owningClass.applyNewTransforms();\n  }\n\n  performFixedResize(x,y){\n    var distanceX;\n    var distanceY;\n\n    switch(this.controlIndex) {\n      //Top left\n      case cropControlsIndicies.TL: {\n        distanceX = x - this.oldX;\n        distanceY = y - this.oldY; \n        if((distanceX) < (distanceY)) {\n          this.owningClass.newW = this.oldW - distanceX;\n          this.owningClass.newH = this.oldH - distanceX;\n          this.owningClass.newX = x;\n          this.owningClass.newY = this.oldY + distanceX;\n        } else {\n          this.owningClass.newW = this.oldW - distanceY;\n          this.owningClass.newH = this.oldH - distanceY;\n          this.owningClass.newX = this.oldX + distanceY;\n          this.owningClass.newY = y;\n        }\n        break;\n      }\n      //Top Right\n      case cropControlsIndicies.TR: {\n        distanceX = (this.oldX + this.oldW) - x;\n        distanceY = y - this.oldY; \n        if((distanceX) < (distanceY)) {\n          this.owningClass.newW= this.oldW - distanceX;\n          this.owningClass.newH = this.oldH - distanceX;\n          this.owningClass.newY = this.oldY + distanceX;\n        } else {\n          this.owningClass.newW = this.oldW - distanceY;\n          this.owningClass.newH = this.oldH - distanceY;\n          this.owningClass.newY = y;\n        }\n        break;\n      }\n      //Bottom left\n      case cropControlsIndicies.BL: {\n        distanceX = x - this.oldX;\n        distanceY = (this.oldY + this.oldH) - y; \n        if((distanceX) < (distanceY)) {\n          this.owningClass.newW = this.oldW - distanceX;\n          this.owningClass.newH = this.oldH - distanceX;\n          this.owningClass.newX = x;\n        } else {\n          this.owningClass.newW = this.oldW - distanceY;\n          this.owningClass.newH = this.oldH - distanceY;\n          this.owningClass.newX = this.oldX + distanceY;\n        }\n        break;\n      }\n      // Bottom right\n      case cropControlsIndicies.BR: {\n        distanceX = (this.oldX + this.oldW) - x;\n        distanceY = (this.oldY + this.oldH) - y; \n        if((distanceX) < (distanceY)) {\n          this.owningClass.newW = this.oldW - distanceX;\n          this.owningClass.newH = this.oldH - distanceX;\n        } else {\n          this.owningClass.newW = this.oldW - distanceY;\n          this.owningClass.newH = this.oldH - distanceY;\n        }\n        break;\n      }\n    }\n    this.owningClass.applyNewTransforms();\n  }\n\n\n  //draw the control handle\n  draw(ctx) {\n    ctx.fillStyle = \"rgba(130, 180, 255, 0.9)\";\n    ctx.fillRect(this.posX, this.posY, this.width, this.height);\n  }\n}\n\n\n//Holds information for the part of the image thats being cropped\nclass Crop extends Square{\n  outlineColor:any;\n  shadeOutColor:any;\n\n  isFixedResize:boolean;\n\n  offsetX:any;\n  offsetY:any;\n\n  imageW:any;\n  imageH:any;\n\n   //Target stats for crop\n   newX:any;\n   newY:any;\n   newW:any;\n   newH:any;\n\n  cropControls = [];\n\n  constructor(){\n    super();\n\n    this.outlineColor = \"rgba(130, 180, 255, 0.9)\";\n    this.shadeOutColor = 'rgba(0,0,0,0.75)';\n    this.isFixedResize = true;\n\n    this.posX = 10;\n    this.posY = 10;\n    this.offsetX = 0;\n    this.offsetY = 0;\n    this.width = 100;\n    this.height = 100;\n\n    //initialize the new values just so it doesnt fuck up on the fisrt move\n    this.newX = this.posX;\n    this.newY = this.posY;\n    this.newW = this.width;\n    this.newH = this.height;\n\n    //Create 4 crop controls and give them all a control index\n    for (var i = 0; i < 4; i++) {\n      let newCropControl = new CropControlHandle(i, this);\n      this.cropControls.push(newCropControl);\n    }\n\n  }\n  //checks if one of the control handles is overlapped\n  overlapControls(x, y, callback){\n    this.cropControls.forEach(control => {\n      if(control.overlap(x,y)){\n        callback(control);\n      } else {\n        callback(null);\n      }\n    });\n  }\n\n  startResize(){\n    \n  }\n  performResize(){\n    this.cropControls.forEach(control => {\n      control.performMove(this);\n    }); \n  }\n  stopResize(){\n    this.cropControls.forEach(control => {\n      control.performMove(this);\n    }); \n  }\n\n  // set an offset for the crop square\n  startMove(offsetX, offsetY){\n    this.offsetX = offsetX - this.posX; \n    this.offsetY = offsetY - this.posY;\n  }\n\n  performMove(moveX, moveY){\n    this.newX = moveX - this.offsetX;\n    this.newY = moveY - this.offsetY;\n    this.applyNewTransforms();\n    this.cropControls.forEach(control => {\n      control.performMove(this);\n    }); \n    \n  }\n  // zero out the offsets\n  stopMove(){\n    this.offsetX = 0;\n    this.offsetY = 0;\n  }\n\n  draw(ctx){\n    //draw boxes around crop area\n    ctx.fillStyle = this.shadeOutColor;\n    ctx.fillRect(0, 0, this.posX, ctx.canvas.height);\n    ctx.fillRect(this.posX, 0, ctx.canvas.width, this.posY );    \n    ctx.fillRect(this.posX + this.width, this.posY, ctx.canvas.width, ctx.canvas.height - this.posY );\n    ctx.fillRect(this.posX, this.posY + this.height, this.width, ctx.canvas.height ); \n\n    this.cropControls.forEach(control => {\n      control.draw(ctx);\n    });\n\n    //draw outline lines\n    ctx.strokeStyle = this.outlineColor;\n    ctx.strokeRect(this.posX,this.posY,this.width,this.height);\n  }\n\n  applyNewTransforms(){\n    //Make sure we cant invert the crop\n    if(this.newW < 20)\n     this.newW = 20;\n    if(this.newH < 20)\n     this.newH = 20;\n\n    //Make sure our new transforms arent out of bounds\n    if ((this.newX + this.newW) > this.imageW)\n      this.newX -= (this.newX + this.newW) - this.imageW;\n    if ((this.newY + this.newH) > this.imageH)\n      this.newY -= (this.newY + this.newH) - this.imageH; \n    if(this.newX < 0)\n      this.newX = 0;\n    if(this.newY < 0)\n      this.newY = 0;\n    \n\n \n    this.posX = this.newX;\n    this.posY = this.newY;\n    this.width = this.newW;\n    this.height = this.newH;\n    \n  } \n}\n","import { NgModule } from '@angular/core';\n\n\nimport { ImageCropperComponent } from './image-cropper.component';\n\n@NgModule({\n  imports: [],\n  declarations: [\n    ImageCropperComponent\n  ],\n  providers: [],\n  exports: [ImageCropperComponent]\n})\n\nexport class ImageCropperModule {}\n"],"names":["NgModule"],"mappings":"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"}